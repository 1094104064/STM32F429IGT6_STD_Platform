<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\template.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\template.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Wed Sep 03 18:32:56 2025
<BR><P>
<H3>Maximum Stack Usage =        224 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
gt911_scan &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[fb]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[31]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31]">SVC_Handler</a><BR>
 <LI><a href="#[33]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33]">PendSV_Handler</a><BR>
 <LI><a href="#[47]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47]">ADC_IRQHandler</a><BR>
 <LI><a href="#[2f]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">BusFault_Handler</a><BR>
 <LI><a href="#[30]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">UsageFault_Handler</a><BR>
 <LI><a href="#[bf]">w25q64_write</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[bf]">w25q64_write</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[47]">ADC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2f]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[49]">CAN1_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4a]">CAN1_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4b]">CAN1_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[48]">CAN1_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[75]">CAN2_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[76]">CAN2_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[77]">CAN2_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[74]">CAN2_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[84]">CRYP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[83]">DCMI_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[40]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[41]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[42]">DMA1_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[43]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[44]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[45]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[46]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[64]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8f]">DMA2D_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6d]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6e]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6f]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[70]">DMA2_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[71]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[79]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7a]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7b]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[32]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[72]">ETH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[73]">ETH_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3b]">EXTI0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5d]">EXTI15_10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3c]">EXTI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3d]">EXTI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3e]">EXTI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3f]">EXTI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4c]">EXTI9_5_IRQHandler</a> from stm32f4xx_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[39]">FLASH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[65]">FMC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[86]">FPU_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[85]">HASH_RNG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2d]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[55]">I2C1_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[54]">I2C1_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[57]">I2C2_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[56]">I2C2_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7e]">I2C3_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7d]">I2C3_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8e]">LTDC_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8d]">LTDC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2e]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2c]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[78]">OTG_FS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5f]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[80]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7f]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[82]">OTG_HS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[81]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[36]">PVD_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[33]">PendSV_Handler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3a]">RCC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5e]">RTC_Alarm_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[38]">RTC_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2b]">Reset_Handler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8c]">SAI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[66]">SDIO_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[58]">SPI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[59]">SPI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[68]">SPI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[89]">SPI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8a]">SPI5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8b]">SPI6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[31]">SVC_Handler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[34]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[90]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[37]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4d]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[50]">TIM1_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4f]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4e]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[51]">TIM2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[52]">TIM3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[53]">TIM4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[67]">TIM5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6b]">TIM6_DAC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6c]">TIM7_IRQHandler</a> from stm32f4xx_it.o(i.TIM7_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[60]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[63]">TIM8_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[62]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[61]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[69]">UART4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6a]">UART5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[87]">UART7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[88]">UART8_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5a]">USART1_IRQHandler</a> from stm32f4xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5b]">USART2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5c]">USART3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7c]">USART6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[30]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[35]">WWDG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[da]">__main</a> from __main.o(!!!main) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[92]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[ca]">bsp_adapter_backlight_off</a> from bsp_adapter_display.o(i.bsp_adapter_backlight_off) referenced from bsp_adapter_display.o(.constdata)
 <LI><a href="#[c9]">bsp_adapter_backlight_on</a> from bsp_adapter_display.o(i.bsp_adapter_backlight_on) referenced from bsp_adapter_display.o(.constdata)
 <LI><a href="#[c1]">bsp_adapter_delay_init</a> from bsp_adapter_delay.o(i.bsp_adapter_delay_init) referenced from bsp_adapter_delay.o(.constdata)
 <LI><a href="#[c3]">bsp_adapter_delay_ms</a> from bsp_adapter_delay.o(i.bsp_adapter_delay_ms) referenced from bsp_adapter_delay.o(.constdata)
 <LI><a href="#[c4]">bsp_adapter_delay_sec</a> from bsp_adapter_delay.o(i.bsp_adapter_delay_sec) referenced from bsp_adapter_delay.o(.constdata)
 <LI><a href="#[c2]">bsp_adapter_delay_us</a> from bsp_adapter_delay.o(i.bsp_adapter_delay_us) referenced from bsp_adapter_delay.o(.constdata)
 <LI><a href="#[ce]">bsp_adapter_display_copy_buffer</a> from bsp_adapter_display.o(i.bsp_adapter_display_copy_buffer) referenced from bsp_adapter_display.o(.constdata)
 <LI><a href="#[cc]">bsp_adapter_display_fill_rect</a> from bsp_adapter_display.o(i.bsp_adapter_display_fill_rect) referenced from bsp_adapter_display.o(.constdata)
 <LI><a href="#[cd]">bsp_adapter_display_fill_screen</a> from bsp_adapter_display.o(i.bsp_adapter_display_fill_screen) referenced from bsp_adapter_display.o(.constdata)
 <LI><a href="#[c8]">bsp_adapter_display_init</a> from bsp_adapter_display.o(i.bsp_adapter_display_init) referenced from bsp_adapter_display.o(.constdata)
 <LI><a href="#[cb]">bsp_adapter_display_put_pixel</a> from bsp_adapter_display.o(i.bsp_adapter_display_put_pixel) referenced from bsp_adapter_display.o(.constdata)
 <LI><a href="#[c5]">bsp_adapter_light_init</a> from bsp_adapter_light.o(i.bsp_adapter_light_init) referenced 2 times from bsp_adapter_light.o(.constdata)
 <LI><a href="#[c7]">bsp_adapter_light_off</a> from bsp_adapter_light.o(i.bsp_adapter_light_off) referenced 2 times from bsp_adapter_light.o(.constdata)
 <LI><a href="#[c6]">bsp_adapter_light_on</a> from bsp_adapter_light.o(i.bsp_adapter_light_on) referenced 2 times from bsp_adapter_light.o(.constdata)
 <LI><a href="#[d7]">bsp_adapter_sflash_erase</a> from bsp_adapter_sflash.o(i.bsp_adapter_sflash_erase) referenced from bsp_adapter_sflash.o(.constdata)
 <LI><a href="#[d9]">bsp_adapter_sflash_erase_chip</a> from bsp_adapter_sflash.o(i.bsp_adapter_sflash_erase_chip) referenced from bsp_adapter_sflash.o(.constdata)
 <LI><a href="#[d5]">bsp_adapter_sflash_get_device_id</a> from bsp_adapter_sflash.o(i.bsp_adapter_sflash_get_device_id) referenced from bsp_adapter_sflash.o(.constdata)
 <LI><a href="#[d4]">bsp_adapter_sflash_init</a> from bsp_adapter_sflash.o(i.bsp_adapter_sflash_init) referenced from bsp_adapter_sflash.o(.constdata)
 <LI><a href="#[d6]">bsp_adapter_sflash_read</a> from bsp_adapter_sflash.o(i.bsp_adapter_sflash_read) referenced from bsp_adapter_sflash.o(.constdata)
 <LI><a href="#[d8]">bsp_adapter_sflash_write</a> from bsp_adapter_sflash.o(i.bsp_adapter_sflash_write) referenced from bsp_adapter_sflash.o(.constdata)
 <LI><a href="#[d3]">bsp_adapter_touchpad_get_coordinates</a> from bsp_adapter_touchpad.o(i.bsp_adapter_touchpad_get_coordinates) referenced from bsp_adapter_touchpad.o(.constdata)
 <LI><a href="#[cf]">bsp_adapter_touchpad_init</a> from bsp_adapter_touchpad.o(i.bsp_adapter_touchpad_init) referenced from bsp_adapter_touchpad.o(.constdata)
 <LI><a href="#[d2]">bsp_adapter_touchpad_is_pressed</a> from bsp_adapter_touchpad.o(i.bsp_adapter_touchpad_is_pressed) referenced from bsp_adapter_touchpad.o(.constdata)
 <LI><a href="#[d0]">bsp_adapter_touchpad_reset</a> from bsp_adapter_touchpad.o(i.bsp_adapter_touchpad_reset) referenced from bsp_adapter_touchpad.o(.constdata)
 <LI><a href="#[d1]">bsp_adapter_touchpad_scan</a> from bsp_adapter_touchpad.o(i.bsp_adapter_touchpad_scan) referenced from bsp_adapter_touchpad.o(.constdata)
 <LI><a href="#[8]">bsp_port_blue_led_off</a> from bsp_adapter_light.o(i.bsp_port_blue_led_off) referenced 2 times from bsp_adapter_light.o(.data)
 <LI><a href="#[7]">bsp_port_blue_led_on</a> from bsp_adapter_light.o(i.bsp_port_blue_led_on) referenced 2 times from bsp_adapter_light.o(.data)
 <LI><a href="#[5]">bsp_port_delay_ms</a> from bsp_adapter_delay.o(i.bsp_port_delay_ms) referenced 2 times from bsp_adapter_delay.o(.data)
 <LI><a href="#[6]">bsp_port_delay_sec</a> from bsp_adapter_delay.o(i.bsp_port_delay_sec) referenced 2 times from bsp_adapter_delay.o(.data)
 <LI><a href="#[4]">bsp_port_delay_us</a> from bsp_adapter_delay.o(i.bsp_port_delay_us) referenced 2 times from bsp_adapter_delay.o(.data)
 <LI><a href="#[27]">bsp_port_gt911_delay_ms</a> from bsp_adapter_touchpad.o(i.bsp_port_gt911_delay_ms) referenced 2 times from bsp_adapter_touchpad.o(.data)
 <LI><a href="#[23]">bsp_port_gt911_int_high</a> from bsp_adapter_touchpad.o(i.bsp_port_gt911_int_high) referenced 2 times from bsp_adapter_touchpad.o(.data)
 <LI><a href="#[21]">bsp_port_gt911_int_in</a> from bsp_adapter_touchpad.o(i.bsp_port_gt911_int_in) referenced 2 times from bsp_adapter_touchpad.o(.data)
 <LI><a href="#[24]">bsp_port_gt911_int_low</a> from bsp_adapter_touchpad.o(i.bsp_port_gt911_int_low) referenced 2 times from bsp_adapter_touchpad.o(.data)
 <LI><a href="#[22]">bsp_port_gt911_int_out</a> from bsp_adapter_touchpad.o(i.bsp_port_gt911_int_out) referenced 2 times from bsp_adapter_touchpad.o(.data)
 <LI><a href="#[20]">bsp_port_gt911_read_reg</a> from bsp_adapter_touchpad.o(i.bsp_port_gt911_read_reg) referenced 2 times from bsp_adapter_touchpad.o(.data)
 <LI><a href="#[25]">bsp_port_gt911_rst_high</a> from bsp_adapter_touchpad.o(i.bsp_port_gt911_rst_high) referenced 2 times from bsp_adapter_touchpad.o(.data)
 <LI><a href="#[26]">bsp_port_gt911_rst_low</a> from bsp_adapter_touchpad.o(i.bsp_port_gt911_rst_low) referenced 2 times from bsp_adapter_touchpad.o(.data)
 <LI><a href="#[1f]">bsp_port_gt911_write_reg</a> from bsp_adapter_touchpad.o(i.bsp_port_gt911_write_reg) referenced 2 times from bsp_adapter_touchpad.o(.data)
 <LI><a href="#[d]">bsp_port_lcd_backlight_off</a> from bsp_adapter_display.o(i.bsp_port_lcd_backlight_off) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[c]">bsp_port_lcd_backlight_on</a> from bsp_adapter_display.o(i.bsp_port_lcd_backlight_on) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[11]">bsp_port_lcd_copy_buffer</a> from bsp_adapter_display.o(i.bsp_port_lcd_copy_buffer) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[f]">bsp_port_lcd_fill_rectangle</a> from bsp_adapter_display.o(i.bsp_port_lcd_fill_rectangle) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[10]">bsp_port_lcd_fill_screen</a> from bsp_adapter_display.o(i.bsp_port_lcd_fill_screen) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[b]">bsp_port_lcd_layer_config</a> from bsp_adapter_display.o(i.bsp_port_lcd_layer_config) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[e]">bsp_port_lcd_put_pixel</a> from bsp_adapter_display.o(i.bsp_port_lcd_put_pixel) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[1e]">bsp_port_st7735_backlight_off</a> from bsp_adapter_display.o(i.bsp_port_st7735_backlight_off) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[1d]">bsp_port_st7735_backlight_on</a> from bsp_adapter_display.o(i.bsp_port_st7735_backlight_on) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[17]">bsp_port_st7735_cs_high</a> from bsp_adapter_display.o(i.bsp_port_st7735_cs_high) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[18]">bsp_port_st7735_cs_low</a> from bsp_adapter_display.o(i.bsp_port_st7735_cs_low) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[19]">bsp_port_st7735_dc_high</a> from bsp_adapter_display.o(i.bsp_port_st7735_dc_high) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[1a]">bsp_port_st7735_dc_low</a> from bsp_adapter_display.o(i.bsp_port_st7735_dc_low) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[12]">bsp_port_st7735_delay_ms</a> from bsp_adapter_display.o(i.bsp_port_st7735_delay_ms) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[1b]">bsp_port_st7735_rst_high</a> from bsp_adapter_display.o(i.bsp_port_st7735_rst_high) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[1c]">bsp_port_st7735_rst_low</a> from bsp_adapter_display.o(i.bsp_port_st7735_rst_low) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[14]">bsp_port_st7735_transmit_16bit</a> from bsp_adapter_display.o(i.bsp_port_st7735_transmit_16bit) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[13]">bsp_port_st7735_transmit_8bit</a> from bsp_adapter_display.o(i.bsp_port_st7735_transmit_8bit) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[16]">bsp_port_st7735_transmit_dma_16bit</a> from bsp_adapter_display.o(i.bsp_port_st7735_transmit_dma_16bit) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[15]">bsp_port_st7735_transmit_dma_8bit</a> from bsp_adapter_display.o(i.bsp_port_st7735_transmit_dma_8bit) referenced 2 times from bsp_adapter_display.o(.data)
 <LI><a href="#[2a]">bsp_port_w25q64_cs_high</a> from bsp_adapter_sflash.o(i.bsp_port_w25q64_cs_high) referenced 2 times from bsp_adapter_sflash.o(.data)
 <LI><a href="#[29]">bsp_port_w25q64_cs_low</a> from bsp_adapter_sflash.o(i.bsp_port_w25q64_cs_low) referenced 2 times from bsp_adapter_sflash.o(.data)
 <LI><a href="#[28]">bsp_port_w25q64_read_write</a> from bsp_adapter_sflash.o(i.bsp_port_w25q64_read_write) referenced 2 times from bsp_adapter_sflash.o(.data)
 <LI><a href="#[a]">bsp_port_yellow_led_off</a> from bsp_adapter_light.o(i.bsp_port_yellow_led_off) referenced 2 times from bsp_adapter_light.o(.data)
 <LI><a href="#[9]">bsp_port_yellow_led_on</a> from bsp_adapter_light.o(i.bsp_port_yellow_led_on) referenced 2 times from bsp_adapter_light.o(.data)
 <LI><a href="#[94]">delay_init</a> from bsp_driver_delay.o(i.delay_init) referenced from bsp_driver_delay.o(i.bsp_driver_delay_link)
 <LI><a href="#[96]">delay_ms</a> from bsp_driver_delay.o(i.delay_ms) referenced from bsp_driver_delay.o(i.bsp_driver_delay_link)
 <LI><a href="#[97]">delay_sec</a> from bsp_driver_delay.o(i.delay_sec) referenced from bsp_driver_delay.o(i.bsp_driver_delay_link)
 <LI><a href="#[95]">delay_us</a> from bsp_driver_delay.o(i.delay_us) referenced from bsp_driver_delay.o(i.bsp_driver_delay_link)
 <LI><a href="#[93]">fputc</a> from usart.o(i.fputc) referenced from _printf_char_file.o(.text)
 <LI><a href="#[9f]">gt911_get_coordinates</a> from bsp_driver_gt911.o(i.gt911_get_coordinates) referenced from bsp_driver_gt911.o(i.bsp_driver_gt911_link)
 <LI><a href="#[98]">gt911_init</a> from bsp_driver_gt911.o(i.gt911_init) referenced from bsp_driver_gt911.o(i.bsp_driver_gt911_link)
 <LI><a href="#[9e]">gt911_is_pressed</a> from bsp_driver_gt911.o(i.gt911_is_pressed) referenced from bsp_driver_gt911.o(i.bsp_driver_gt911_link)
 <LI><a href="#[9c]">gt911_read_firmware_version</a> from bsp_driver_gt911.o(i.gt911_read_firmware_version) referenced from bsp_driver_gt911.o(i.bsp_driver_gt911_link)
 <LI><a href="#[9a]">gt911_read_id</a> from bsp_driver_gt911.o(i.gt911_read_id) referenced from bsp_driver_gt911.o(i.bsp_driver_gt911_link)
 <LI><a href="#[9b]">gt911_read_resolution</a> from bsp_driver_gt911.o(i.gt911_read_resolution) referenced from bsp_driver_gt911.o(i.bsp_driver_gt911_link)
 <LI><a href="#[99]">gt911_reset</a> from bsp_driver_gt911.o(i.gt911_reset) referenced from bsp_driver_gt911.o(i.bsp_driver_gt911_link)
 <LI><a href="#[9d]">gt911_scan</a> from bsp_driver_gt911.o(i.gt911_scan) referenced from bsp_driver_gt911.o(i.bsp_driver_gt911_link)
 <LI><a href="#[a2]">lcd_backlight_off</a> from bsp_driver_lcd.o(i.lcd_backlight_off) referenced from bsp_driver_lcd.o(i.bsp_driver_lcd_link)
 <LI><a href="#[a1]">lcd_backlight_on</a> from bsp_driver_lcd.o(i.lcd_backlight_on) referenced from bsp_driver_lcd.o(i.bsp_driver_lcd_link)
 <LI><a href="#[a6]">lcd_copy_buffer</a> from bsp_driver_lcd.o(i.lcd_copy_buffer) referenced from bsp_driver_lcd.o(i.bsp_driver_lcd_link)
 <LI><a href="#[a4]">lcd_fill_rect</a> from bsp_driver_lcd.o(i.lcd_fill_rect) referenced from bsp_driver_lcd.o(i.bsp_driver_lcd_link)
 <LI><a href="#[a5]">lcd_fill_screen</a> from bsp_driver_lcd.o(i.lcd_fill_screen) referenced from bsp_driver_lcd.o(i.bsp_driver_lcd_link)
 <LI><a href="#[a0]">lcd_layer_config</a> from bsp_driver_lcd.o(i.lcd_layer_config) referenced from bsp_driver_lcd.o(i.bsp_driver_lcd_link)
 <LI><a href="#[a3]">lcd_put_pixel</a> from bsp_driver_lcd.o(i.lcd_put_pixel) referenced from bsp_driver_lcd.o(i.bsp_driver_lcd_link)
 <LI><a href="#[a7]">led_init</a> from bsp_driver_led.o(i.led_init) referenced from bsp_driver_led.o(i.bsp_driver_led_link)
 <LI><a href="#[a9]">led_off</a> from bsp_driver_led.o(i.led_off) referenced from bsp_driver_led.o(i.bsp_driver_led_link)
 <LI><a href="#[a8]">led_on</a> from bsp_driver_led.o(i.led_on) referenced from bsp_driver_led.o(i.bsp_driver_led_link)
 <LI><a href="#[b4]">st7735_backlight_off</a> from bsp_driver_st7735.o(i.st7735_backlight_off) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[b3]">st7735_backlight_on</a> from bsp_driver_st7735.o(i.st7735_backlight_on) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[b5]">st7735_backlight_set</a> from bsp_driver_st7735.o(i.st7735_backlight_set) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[b2]">st7735_copy_buffer</a> from bsp_driver_st7735.o(i.st7735_copy_buffer) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[b0]">st7735_fill_rect</a> from bsp_driver_st7735.o(i.st7735_fill_rect) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[b1]">st7735_fill_screen</a> from bsp_driver_st7735.o(i.st7735_fill_screen) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[ac]">st7735_init</a> from bsp_driver_st7735.o(i.st7735_init) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[af]">st7735_put_pixel</a> from bsp_driver_st7735.o(i.st7735_put_pixel) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[ad]">st7735_set_cursor</a> from bsp_driver_st7735.o(i.st7735_set_cursor) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[ae]">st7735_set_window</a> from bsp_driver_st7735.o(i.st7735_set_window) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[ab]">st7735_write_command</a> from bsp_driver_st7735.o(i.st7735_write_command) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[aa]">st7735_write_data</a> from bsp_driver_st7735.o(i.st7735_write_data) referenced from bsp_driver_st7735.o(i.bsp_driver_st7735_link)
 <LI><a href="#[bb]">w25q64_erase_block_32k</a> from bsp_driver_w25q64.o(i.w25q64_erase_block_32k) referenced from bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
 <LI><a href="#[bc]">w25q64_erase_block_64k</a> from bsp_driver_w25q64.o(i.w25q64_erase_block_64k) referenced from bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
 <LI><a href="#[bd]">w25q64_erase_chip</a> from bsp_driver_w25q64.o(i.w25q64_erase_chip) referenced from bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
 <LI><a href="#[ba]">w25q64_erase_sector</a> from bsp_driver_w25q64.o(i.w25q64_erase_sector) referenced from bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
 <LI><a href="#[b6]">w25q64_init</a> from bsp_driver_w25q64.o(i.w25q64_init) referenced from bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
 <LI><a href="#[c0]">w25q64_read</a> from bsp_driver_w25q64.o(i.w25q64_read) referenced from bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
 <LI><a href="#[b7]">w25q64_read_id</a> from bsp_driver_w25q64.o(i.w25q64_read_id) referenced from bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
 <LI><a href="#[b9]">w25q64_wait_for_write_end</a> from bsp_driver_w25q64.o(i.w25q64_wait_for_write_end) referenced from bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
 <LI><a href="#[bf]">w25q64_write</a> from bsp_driver_w25q64.o(i.w25q64_write) referenced from bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
 <LI><a href="#[b8]">w25q64_write_enable</a> from bsp_driver_w25q64.o(i.w25q64_write_enable) referenced from bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
 <LI><a href="#[be]">w25q64_write_page</a> from bsp_driver_w25q64.o(i.w25q64_write_page) referenced from bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[da]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[db]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[dd]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[16c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[16d]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[16e]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[16f]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[170]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[de]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[f4]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[e0]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[171]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[e7]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[e2]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[172]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[173]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[174]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[175]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[176]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[177]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[178]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[179]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[17a]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[17b]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[17c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[17d]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[17e]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[17f]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[180]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[181]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[182]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[183]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[184]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[185]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[ec]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[186]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[187]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[188]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[189]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[18a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[18b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[18c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[18d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[dc]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[18e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[e4]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[e6]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[18f]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[e8]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; app_init_core &rArr; STD_FMC_SDRAM_Init &rArr; STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[190]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[fc]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[eb]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[191]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[ed]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2b]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[fb]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[192]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, __2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_sflash_init
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_light_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_display_init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_USART1_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_display_put_pixel
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_display_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_display_fill_screen
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_display_fill_rect
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_display_copy_buffer
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_backlight_on
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_backlight_off
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_light_on
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_light_off
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_light_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt911_scan
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt911_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_pixel
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_write_reg
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_read_reg
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[f7]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[df]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[f2]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_touchpad_register
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_sflash_register
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_light_register
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_display_register
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_delay_register
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_sflash_link
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_touchpad_link
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_display_link
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_light_link
</UL>

<P><STRONG><a name="[193]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[194]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[195]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI3_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI1_Init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_FMC_SDRAM_Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_sflash_link
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_display_link
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_light_link
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt911_scan
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_DMA_Transmit16Bit
</UL>

<P><STRONG><a name="[196]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[198]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[15e]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_light_set_operation_object
</UL>

<P><STRONG><a name="[199]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[19a]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[19b]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[19c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[19d]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[f5]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[f6]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[f8]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[e1]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[f0]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[f9]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[e5]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[ea]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[19e]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[19f]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[121]"></a>DMA_ClearFlag</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_DMA_Transmit16Bit
</UL>

<P><STRONG><a name="[11d]"></a>DMA_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_DMA_Transmit16Bit
</UL>

<P><STRONG><a name="[11a]"></a>DMA_DeInit</STRONG> (Thumb, 272 bytes, Stack size 28 bytes, stm32f4xx_dma.o(i.DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_DMA_Transmit16Bit
</UL>

<P><STRONG><a name="[11b]"></a>DMA_GetCmdStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_GetCmdStatus))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_DMA_Transmit16Bit
</UL>

<P><STRONG><a name="[120]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_DMA_Transmit16Bit
</UL>

<P><STRONG><a name="[11c]"></a>DMA_Init</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_DMA_Transmit16Bit
</UL>

<P><STRONG><a name="[11e]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_SetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_DMA_Transmit16Bit
</UL>

<P><STRONG><a name="[32]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[fd]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[106]"></a>FMC_GetFlagStatus</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_FMC_SDRAM_Init
</UL>

<P><STRONG><a name="[107]"></a>FMC_SDRAMCmdConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMCmdConfig))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_FMC_SDRAM_Init
</UL>

<P><STRONG><a name="[105]"></a>FMC_SDRAMInit</STRONG> (Thumb, 282 bytes, Stack size 20 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_SDRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_FMC_SDRAM_Init
</UL>

<P><STRONG><a name="[109]"></a>FMC_SetRefreshCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SetRefreshCount))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_FMC_SDRAM_Init
</UL>

<P><STRONG><a name="[10c]"></a>GPIO_Init</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
</UL>

<P><STRONG><a name="[10e]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
</UL>

<P><STRONG><a name="[16b]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_wait_ack
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_read_byte
</UL>

<P><STRONG><a name="[150]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_rst_low
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_dc_low
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_cs_low
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_backlight_off
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_lcd_backlight_off
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_yellow_led_on
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_blue_led_on
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_write_byte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_wait_ack
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_stop
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_start
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_read_byte
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_generate_nack
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_generate_ack
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_w25q64_cs_low
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_rst_low
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_int_low
</UL>

<P><STRONG><a name="[112]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI1_Init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_rst_high
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_dc_high
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_cs_high
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_backlight_on
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_lcd_backlight_on
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_yellow_led_off
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_blue_led_off
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_write_byte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_wait_ack
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_stop
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_start
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_read_byte
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_generate_nack
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_generate_ack
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_w25q64_cs_high
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_rst_high
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_int_high
</UL>

<P><STRONG><a name="[2d]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = HardFault_Handler &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>MemManage_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = MemManage_Handler &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[12b]"></a>NVIC_Init</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_USART1_NVIC_Init
</UL>

<P><STRONG><a name="[161]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ff]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_DMA_ClockCmd
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_DMA2D_ClockCmd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
</UL>

<P><STRONG><a name="[104]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB3PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_FMC_SDRAM_Init
</UL>

<P><STRONG><a name="[117]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI3_Init
</UL>

<P><STRONG><a name="[113]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_USART1_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI1_Init
</UL>

<P><STRONG><a name="[132]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[115]"></a>SPI_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI3_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI1_Init
</UL>

<P><STRONG><a name="[11f]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_DMA_Transmit16Bit
</UL>

<P><STRONG><a name="[123]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_ReadWrite
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_Transmit8Bit
</UL>

<P><STRONG><a name="[125]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_ReadWrite
</UL>

<P><STRONG><a name="[124]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_ReadWrite
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_Transmit8Bit
</UL>

<P><STRONG><a name="[114]"></a>SPI_Init</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI3_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI1_Init
</UL>

<P><STRONG><a name="[fe]"></a>STD_DMA2D_ClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dma2d.o(i.STD_DMA2D_ClockCmd))
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_core
</UL>

<P><STRONG><a name="[158]"></a>STD_DMA2D_CopyBuffer</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, dma2d.o(i.STD_DMA2D_CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = STD_DMA2D_CopyBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_lcd_copy_buffer
</UL>

<P><STRONG><a name="[159]"></a>STD_DMA2D_FillRectangle</STRONG> (Thumb, 186 bytes, Stack size 20 bytes, dma2d.o(i.STD_DMA2D_FillRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = STD_DMA2D_FillRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_lcd_fill_rectangle
</UL>

<P><STRONG><a name="[15a]"></a>STD_DMA2D_FillScreen</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dma2d.o(i.STD_DMA2D_FillScreen))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_lcd_fill_screen
</UL>

<P><STRONG><a name="[15b]"></a>STD_DMA2D_GetActiveLayer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma2d.o(i.STD_DMA2D_GetActiveLayer))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_lcd_layer_config
</UL>

<P><STRONG><a name="[100]"></a>STD_DMA_ClockCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, dma.o(i.STD_DMA_ClockCmd))
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_core
</UL>

<P><STRONG><a name="[142]"></a>STD_DWT_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dwt.o(i.STD_DWT_Init))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_core
</UL>

<P><STRONG><a name="[101]"></a>STD_FMC_SDRAM_Init</STRONG> (Thumb, 994 bytes, Stack size 136 bytes, fmc.o(i.STD_FMC_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = STD_FMC_SDRAM_Init &rArr; STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SYSTICK_Delay
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SetRefreshCount
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMInit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMCmdConfig
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_GetFlagStatus
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_core
</UL>

<P><STRONG><a name="[10a]"></a>STD_GPIO_BspInit</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, gpio.o(i.STD_GPIO_BspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = STD_GPIO_BspInit &rArr; STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_core
</UL>

<P><STRONG><a name="[102]"></a>STD_GPIO_Init</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, gpio.o(i.STD_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pin_source
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_periph_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_USART1_Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI3_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI1_Init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_BspInit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_FMC_SDRAM_Init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_OutputMode
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_InputMode
</UL>

<P><STRONG><a name="[10f]"></a>STD_GPIO_InputMode</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gpio.o(i.STD_GPIO_InputMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = STD_GPIO_InputMode &rArr; STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_int_in
</UL>

<P><STRONG><a name="[110]"></a>STD_GPIO_OutputMode</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gpio.o(i.STD_GPIO_OutputMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = STD_GPIO_OutputMode &rArr; STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_int_out
</UL>

<P><STRONG><a name="[111]"></a>STD_SPI1_Init</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, spi.o(i.STD_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = STD_SPI1_Init &rArr; STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_core
</UL>

<P><STRONG><a name="[116]"></a>STD_SPI3_Init</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, spi.o(i.STD_SPI3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = STD_SPI3_Init &rArr; STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_core
</UL>

<P><STRONG><a name="[118]"></a>STD_SPI_DMA_Transmit16Bit</STRONG> (Thumb, 322 bytes, Stack size 96 bytes, spi.o(i.STD_SPI_DMA_Transmit16Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = STD_SPI_DMA_Transmit16Bit &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SYSTICK_Get
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DMACmd
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCmdStatus
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_transmit_dma_16bit
</UL>

<P><STRONG><a name="[122]"></a>STD_SPI_ReadWrite</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, spi.o(i.STD_SPI_ReadWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = STD_SPI_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_w25q64_read_write
</UL>

<P><STRONG><a name="[15c]"></a>STD_SPI_Transmit16Bit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, spi.o(i.STD_SPI_Transmit16Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STD_SPI_Transmit16Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_transmit_16bit
</UL>

<P><STRONG><a name="[126]"></a>STD_SPI_Transmit8Bit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, spi.o(i.STD_SPI_Transmit8Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = STD_SPI_Transmit8Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_transmit_8bit
</UL>

<P><STRONG><a name="[108]"></a>STD_SYSTICK_Delay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.STD_SYSTICK_Delay))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_FMC_SDRAM_Init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_st7735_delay_ms
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_delay_ms
</UL>

<P><STRONG><a name="[119]"></a>STD_SYSTICK_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(i.STD_SYSTICK_Get))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_delay_sec
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_DMA_Transmit16Bit
</UL>

<P><STRONG><a name="[12d]"></a>STD_SYSTICK_Inc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.STD_SYSTICK_Inc))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[143]"></a>STD_SYSTICK_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, systick.o(i.STD_SYSTICK_Init))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_core
</UL>

<P><STRONG><a name="[127]"></a>STD_USART1_Init</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, usart.o(i.STD_USART1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = STD_USART1_Init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_core
</UL>

<P><STRONG><a name="[12a]"></a>STD_USART1_NVIC_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usart.o(i.STD_USART1_NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = STD_USART1_NVIC_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_core
</UL>

<P><STRONG><a name="[34]"></a>SysTick_Handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_inc
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SYSTICK_Inc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>SystemInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.TIM7_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[130]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[5a]"></a>USART1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[129]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_USART1_Init
</UL>

<P><STRONG><a name="[160]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[131]"></a>USART_GetITStatus</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[12c]"></a>USART_ITConfig</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_USART1_NVIC_Init
</UL>

<P><STRONG><a name="[128]"></a>USART_Init</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_USART1_Init
</UL>

<P><STRONG><a name="[15f]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[30]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[f3]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[ee]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usart.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[133]"></a>app_init_bsp</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_init.o(i.app_init_bsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = app_init_bsp &rArr; bsp_wrapper_light_init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_touchpad_init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_sflash_init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_light_set_operation_object
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_light_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_display_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_display_draw_grad_rgb565
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_display_backlight_on
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_delay_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_touchpad_register
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_sflash_register
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_light_register
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_display_register
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_delay_register
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[141]"></a>app_init_core</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_init.o(i.app_init_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = app_init_core &rArr; STD_FMC_SDRAM_Init &rArr; STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_USART1_NVIC_Init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_USART1_Init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SYSTICK_Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI3_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI1_Init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_BspInit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_FMC_SDRAM_Init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_DWT_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_DMA_ClockCmd
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_DMA2D_ClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[162]"></a>app_init_middleware</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_init.o(i.app_init_middleware))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[134]"></a>bsp_adapter_delay_register</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, bsp_adapter_delay.o(i.bsp_adapter_delay_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_adapter_delay_register &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_delay_link
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[139]"></a>bsp_adapter_display_register</STRONG> (Thumb, 42 bytes, Stack size 56 bytes, bsp_adapter_display.o(i.bsp_adapter_display_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bsp_adapter_display_register &rArr; bsp_wrapper_display_link &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_display_link
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[136]"></a>bsp_adapter_light_register</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, bsp_adapter_light.o(i.bsp_adapter_light_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bsp_adapter_light_register &rArr; bsp_wrapper_light_link &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_light_link
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[13f]"></a>bsp_adapter_sflash_register</STRONG> (Thumb, 24 bytes, Stack size 40 bytes, bsp_adapter_sflash.o(i.bsp_adapter_sflash_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bsp_adapter_sflash_register &rArr; bsp_wrapper_sflash_link &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_sflash_link
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[13d]"></a>bsp_adapter_touchpad_register</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, bsp_adapter_touchpad.o(i.bsp_adapter_touchpad_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_adapter_touchpad_register &rArr; bsp_wrapper_touchpad_link &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_touchpad_link
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[144]"></a>bsp_driver_delay_link</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bsp_driver_delay.o(i.bsp_driver_delay_link))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_delay_init
</UL>

<P><STRONG><a name="[14e]"></a>bsp_driver_gt911_link</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, bsp_driver_gt911.o(i.bsp_driver_gt911_link))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_touchpad_init
</UL>

<P><STRONG><a name="[147]"></a>bsp_driver_lcd_link</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, bsp_driver_lcd.o(i.bsp_driver_lcd_link))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_display_init
</UL>

<P><STRONG><a name="[14a]"></a>bsp_driver_led_link</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bsp_driver_led.o(i.bsp_driver_led_link))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_light_init
</UL>

<P><STRONG><a name="[148]"></a>bsp_driver_st7735_link</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, bsp_driver_st7735.o(i.bsp_driver_st7735_link))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bsp_driver_st7735_link
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_display_init
</UL>

<P><STRONG><a name="[14c]"></a>bsp_driver_w25q64_link</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bsp_driver_w25q64.o(i.bsp_driver_w25q64_link))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_sflash_init
</UL>

<P><STRONG><a name="[135]"></a>bsp_wrapper_delay_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp_wrapper_delay.o(i.bsp_wrapper_delay_init))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[146]"></a>bsp_wrapper_delay_link</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, bsp_wrapper_delay.o(i.bsp_wrapper_delay_link))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_delay_register
</UL>

<P><STRONG><a name="[13b]"></a>bsp_wrapper_display_backlight_on</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp_wrapper_display.o(i.bsp_wrapper_display_backlight_on))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[13c]"></a>bsp_wrapper_display_draw_grad_rgb565</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, bsp_wrapper_display.o(i.bsp_wrapper_display_draw_grad_rgb565))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_wrapper_display_draw_grad_rgb565 &rArr; bsp_wrapper_display_draw_pixel
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_display_draw_pixel
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[15d]"></a>bsp_wrapper_display_draw_pixel</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bsp_wrapper_display.o(i.bsp_wrapper_display_draw_pixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_wrapper_display_draw_pixel
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wrapper_display_draw_grad_rgb565
</UL>

<P><STRONG><a name="[13a]"></a>bsp_wrapper_display_init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, bsp_wrapper_display.o(i.bsp_wrapper_display_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = bsp_wrapper_display_init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[149]"></a>bsp_wrapper_display_link</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bsp_wrapper_display.o(i.bsp_wrapper_display_link))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_wrapper_display_link &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_display_register
</UL>

<P><STRONG><a name="[138]"></a>bsp_wrapper_light_init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bsp_wrapper_light.o(i.bsp_wrapper_light_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = bsp_wrapper_light_init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[14b]"></a>bsp_wrapper_light_link</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bsp_wrapper_light.o(i.bsp_wrapper_light_link))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_wrapper_light_link &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_light_register
</UL>

<P><STRONG><a name="[137]"></a>bsp_wrapper_light_set_operation_object</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bsp_wrapper_light.o(i.bsp_wrapper_light_set_operation_object))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_wrapper_light_set_operation_object
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[140]"></a>bsp_wrapper_sflash_init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, bsp_wrapper_sflash.o(i.bsp_wrapper_sflash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = bsp_wrapper_sflash_init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[14d]"></a>bsp_wrapper_sflash_link</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bsp_wrapper_sflash.o(i.bsp_wrapper_sflash_link))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsp_wrapper_sflash_link &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_sflash_register
</UL>

<P><STRONG><a name="[13e]"></a>bsp_wrapper_touchpad_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_wrapper_touchpad.o(i.bsp_wrapper_touchpad_init))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
</UL>

<P><STRONG><a name="[14f]"></a>bsp_wrapper_touchpad_link</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bsp_wrapper_touchpad.o(i.bsp_wrapper_touchpad_link))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_wrapper_touchpad_link &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adapter_touchpad_register
</UL>

<P><STRONG><a name="[93]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[12e]"></a>lv_tick_inc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_hal_tick.o(i.lv_tick_inc))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[e9]"></a>main</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = main &rArr; app_init_core &rArr; STD_FMC_SDRAM_Init &rArr; STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_middleware
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_core
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_bsp
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[157]"></a>msp_cluster_i2c_generate_ack</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, msp_cluster_i2c.o(i.msp_cluster_i2c_generate_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = msp_cluster_i2c_generate_ack &rArr; msp_emul_i2c_generate_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_generate_ack
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_read_reg
</UL>

<P><STRONG><a name="[156]"></a>msp_cluster_i2c_generate_nack</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, msp_cluster_i2c.o(i.msp_cluster_i2c_generate_nack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = msp_cluster_i2c_generate_nack &rArr; msp_emul_i2c_generate_nack
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_generate_nack
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_read_reg
</UL>

<P><STRONG><a name="[155]"></a>msp_cluster_i2c_read_byte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, msp_cluster_i2c.o(i.msp_cluster_i2c_read_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = msp_cluster_i2c_read_byte &rArr; msp_emul_i2c_read_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_read_reg
</UL>

<P><STRONG><a name="[151]"></a>msp_cluster_i2c_start</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, msp_cluster_i2c.o(i.msp_cluster_i2c_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = msp_cluster_i2c_start &rArr; msp_emul_i2c_start
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_start
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_write_reg
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_read_reg
</UL>

<P><STRONG><a name="[154]"></a>msp_cluster_i2c_stop</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, msp_cluster_i2c.o(i.msp_cluster_i2c_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = msp_cluster_i2c_stop &rArr; msp_emul_i2c_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_write_reg
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_read_reg
</UL>

<P><STRONG><a name="[153]"></a>msp_cluster_i2c_wait_ack</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, msp_cluster_i2c.o(i.msp_cluster_i2c_wait_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = msp_cluster_i2c_wait_ack &rArr; msp_emul_i2c_wait_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_wait_ack
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_write_reg
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_read_reg
</UL>

<P><STRONG><a name="[152]"></a>msp_cluster_i2c_write_byte</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, msp_cluster_i2c.o(i.msp_cluster_i2c_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = msp_cluster_i2c_write_byte &rArr; msp_emul_i2c_write_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_write_reg
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_port_gt911_read_reg
</UL>

<P><STRONG><a name="[163]"></a>msp_emul_i2c_generate_ack</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, msp_emul_i2c.o(i.msp_emul_i2c_generate_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = msp_emul_i2c_generate_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_generate_ack
</UL>

<P><STRONG><a name="[164]"></a>msp_emul_i2c_generate_nack</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, msp_emul_i2c.o(i.msp_emul_i2c_generate_nack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = msp_emul_i2c_generate_nack
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_generate_nack
</UL>

<P><STRONG><a name="[165]"></a>msp_emul_i2c_read_byte</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, msp_emul_i2c.o(i.msp_emul_i2c_read_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = msp_emul_i2c_read_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_read_byte
</UL>

<P><STRONG><a name="[166]"></a>msp_emul_i2c_start</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, msp_emul_i2c.o(i.msp_emul_i2c_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = msp_emul_i2c_start
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_start
</UL>

<P><STRONG><a name="[167]"></a>msp_emul_i2c_stop</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, msp_emul_i2c.o(i.msp_emul_i2c_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = msp_emul_i2c_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_stop
</UL>

<P><STRONG><a name="[168]"></a>msp_emul_i2c_wait_ack</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, msp_emul_i2c.o(i.msp_emul_i2c_wait_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = msp_emul_i2c_wait_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_wait_ack
</UL>

<P><STRONG><a name="[169]"></a>msp_emul_i2c_write_byte</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, msp_emul_i2c.o(i.msp_emul_i2c_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = msp_emul_i2c_write_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_write_byte
</UL>

<P><STRONG><a name="[e3]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[1a0]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[1a1]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c1]"></a>bsp_adapter_delay_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsp_adapter_delay.o(i.bsp_adapter_delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_adapter_delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_driver_delay_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_delay.o(.constdata)
</UL>
<P><STRONG><a name="[c3]"></a>bsp_adapter_delay_ms</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_adapter_delay.o(i.bsp_adapter_delay_ms))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_delay.o(.constdata)
</UL>
<P><STRONG><a name="[c4]"></a>bsp_adapter_delay_sec</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_adapter_delay.o(i.bsp_adapter_delay_sec))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_delay.o(.constdata)
</UL>
<P><STRONG><a name="[c2]"></a>bsp_adapter_delay_us</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_adapter_delay.o(i.bsp_adapter_delay_us))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_delay.o(.constdata)
</UL>
<P><STRONG><a name="[5]"></a>bsp_port_delay_ms</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bsp_adapter_delay.o(i.bsp_port_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_port_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SYSTICK_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_delay.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>bsp_port_delay_sec</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_adapter_delay.o(i.bsp_port_delay_sec))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_port_delay_sec
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SYSTICK_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_delay.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>bsp_port_delay_us</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bsp_adapter_delay.o(i.bsp_port_delay_us))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_delay.o(.data)
</UL>
<P><STRONG><a name="[c5]"></a>bsp_adapter_light_init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, bsp_adapter_light.o(i.bsp_adapter_light_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = bsp_adapter_light_init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_driver_led_link
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_light.o(.constdata)
</UL>
<P><STRONG><a name="[c7]"></a>bsp_adapter_light_off</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bsp_adapter_light.o(i.bsp_adapter_light_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = bsp_adapter_light_off &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_light.o(.constdata)
</UL>
<P><STRONG><a name="[c6]"></a>bsp_adapter_light_on</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bsp_adapter_light.o(i.bsp_adapter_light_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = bsp_adapter_light_on &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_light.o(.constdata)
</UL>
<P><STRONG><a name="[8]"></a>bsp_port_blue_led_off</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_light.o(i.bsp_port_blue_led_off))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_light.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>bsp_port_blue_led_on</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_light.o(i.bsp_port_blue_led_on))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_light.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>bsp_port_yellow_led_off</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_light.o(i.bsp_port_yellow_led_off))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_light.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>bsp_port_yellow_led_on</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_light.o(i.bsp_port_yellow_led_on))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_light.o(.data)
</UL>
<P><STRONG><a name="[ca]"></a>bsp_adapter_backlight_off</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_adapter_backlight_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = bsp_adapter_backlight_off &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.constdata)
</UL>
<P><STRONG><a name="[c9]"></a>bsp_adapter_backlight_on</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_adapter_backlight_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = bsp_adapter_backlight_on &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.constdata)
</UL>
<P><STRONG><a name="[ce]"></a>bsp_adapter_display_copy_buffer</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, bsp_adapter_display.o(i.bsp_adapter_display_copy_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = bsp_adapter_display_copy_buffer &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.constdata)
</UL>
<P><STRONG><a name="[cc]"></a>bsp_adapter_display_fill_rect</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, bsp_adapter_display.o(i.bsp_adapter_display_fill_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = bsp_adapter_display_fill_rect &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.constdata)
</UL>
<P><STRONG><a name="[cd]"></a>bsp_adapter_display_fill_screen</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_adapter_display_fill_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = bsp_adapter_display_fill_screen &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.constdata)
</UL>
<P><STRONG><a name="[c8]"></a>bsp_adapter_display_init</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, bsp_adapter_display.o(i.bsp_adapter_display_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = bsp_adapter_display_init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_driver_st7735_link
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_driver_lcd_link
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.constdata)
</UL>
<P><STRONG><a name="[cb]"></a>bsp_adapter_display_put_pixel</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_adapter_display.o(i.bsp_adapter_display_put_pixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = bsp_adapter_display_put_pixel &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.constdata)
</UL>
<P><STRONG><a name="[d]"></a>bsp_port_lcd_backlight_off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_lcd_backlight_off))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>bsp_port_lcd_backlight_on</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_lcd_backlight_on))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>bsp_port_lcd_copy_buffer</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, bsp_adapter_display.o(i.bsp_port_lcd_copy_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bsp_port_lcd_copy_buffer &rArr; STD_DMA2D_CopyBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_DMA2D_CopyBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>bsp_port_lcd_fill_rectangle</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, bsp_adapter_display.o(i.bsp_port_lcd_fill_rectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bsp_port_lcd_fill_rectangle &rArr; STD_DMA2D_FillRectangle
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_DMA2D_FillRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>bsp_port_lcd_fill_screen</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_lcd_fill_screen))
<BR><BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_DMA2D_FillScreen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>bsp_port_lcd_layer_config</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bsp_adapter_display.o(i.bsp_port_lcd_layer_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_port_lcd_layer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_DMA2D_GetActiveLayer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>bsp_port_lcd_put_pixel</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_lcd_put_pixel))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>bsp_port_st7735_backlight_off</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_backlight_off))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>bsp_port_st7735_backlight_on</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_backlight_on))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>bsp_port_st7735_cs_high</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_cs_high))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>bsp_port_st7735_cs_low</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_cs_low))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>bsp_port_st7735_dc_high</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_dc_high))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>bsp_port_st7735_dc_low</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_dc_low))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>bsp_port_st7735_delay_ms</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_delay_ms))
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SYSTICK_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>bsp_port_st7735_rst_high</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_rst_high))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>bsp_port_st7735_rst_low</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_rst_low))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>bsp_port_st7735_transmit_16bit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_transmit_16bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_port_st7735_transmit_16bit &rArr; STD_SPI_Transmit16Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_Transmit16Bit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>bsp_port_st7735_transmit_8bit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_transmit_8bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_port_st7735_transmit_8bit &rArr; STD_SPI_Transmit8Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_Transmit8Bit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>bsp_port_st7735_transmit_dma_16bit</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bsp_adapter_display.o(i.bsp_port_st7735_transmit_dma_16bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = bsp_port_st7735_transmit_dma_16bit &rArr; STD_SPI_DMA_Transmit16Bit &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_DMA_Transmit16Bit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>bsp_port_st7735_transmit_dma_8bit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bsp_adapter_display.o(i.bsp_port_st7735_transmit_dma_8bit))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_display.o(.data)
</UL>
<P><STRONG><a name="[d3]"></a>bsp_adapter_touchpad_get_coordinates</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_adapter_touchpad.o(i.bsp_adapter_touchpad_get_coordinates))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_adapter_touchpad_get_coordinates
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>bsp_adapter_touchpad_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_adapter_touchpad.o(i.bsp_adapter_touchpad_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_adapter_touchpad_init
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_driver_gt911_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.constdata)
</UL>
<P><STRONG><a name="[d2]"></a>bsp_adapter_touchpad_is_pressed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_adapter_touchpad.o(i.bsp_adapter_touchpad_is_pressed))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.constdata)
</UL>
<P><STRONG><a name="[d0]"></a>bsp_adapter_touchpad_reset</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_adapter_touchpad.o(i.bsp_adapter_touchpad_reset))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.constdata)
</UL>
<P><STRONG><a name="[d1]"></a>bsp_adapter_touchpad_scan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_adapter_touchpad.o(i.bsp_adapter_touchpad_scan))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.constdata)
</UL>
<P><STRONG><a name="[27]"></a>bsp_port_gt911_delay_ms</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_adapter_touchpad.o(i.bsp_port_gt911_delay_ms))
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SYSTICK_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>bsp_port_gt911_int_high</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_adapter_touchpad.o(i.bsp_port_gt911_int_high))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>bsp_port_gt911_int_in</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_adapter_touchpad.o(i.bsp_port_gt911_int_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = bsp_port_gt911_int_in &rArr; STD_GPIO_InputMode &rArr; STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_InputMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>bsp_port_gt911_int_low</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_adapter_touchpad.o(i.bsp_port_gt911_int_low))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>bsp_port_gt911_int_out</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_adapter_touchpad.o(i.bsp_port_gt911_int_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = bsp_port_gt911_int_out &rArr; STD_GPIO_OutputMode &rArr; STD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_OutputMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>bsp_port_gt911_read_reg</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, bsp_adapter_touchpad.o(i.bsp_port_gt911_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = bsp_port_gt911_read_reg &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_write_byte
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_wait_ack
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_stop
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_start
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_read_byte
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_generate_nack
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_generate_ack
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>bsp_port_gt911_rst_high</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_adapter_touchpad.o(i.bsp_port_gt911_rst_high))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>bsp_port_gt911_rst_low</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_adapter_touchpad.o(i.bsp_port_gt911_rst_low))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>bsp_port_gt911_write_reg</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, bsp_adapter_touchpad.o(i.bsp_port_gt911_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = bsp_port_gt911_write_reg &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_write_byte
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_wait_ack
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_stop
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_cluster_i2c_start
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_touchpad.o(.data)
</UL>
<P><STRONG><a name="[d7]"></a>bsp_adapter_sflash_erase</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bsp_adapter_sflash.o(i.bsp_adapter_sflash_erase))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_sflash.o(.constdata)
</UL>
<P><STRONG><a name="[d9]"></a>bsp_adapter_sflash_erase_chip</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_adapter_sflash.o(i.bsp_adapter_sflash_erase_chip))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_sflash.o(.constdata)
</UL>
<P><STRONG><a name="[d5]"></a>bsp_adapter_sflash_get_device_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_adapter_sflash.o(i.bsp_adapter_sflash_get_device_id))
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_sflash.o(.constdata)
</UL>
<P><STRONG><a name="[d4]"></a>bsp_adapter_sflash_init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, bsp_adapter_sflash.o(i.bsp_adapter_sflash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_adapter_sflash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_driver_w25q64_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_sflash.o(.constdata)
</UL>
<P><STRONG><a name="[d6]"></a>bsp_adapter_sflash_read</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_adapter_sflash.o(i.bsp_adapter_sflash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_adapter_sflash_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_sflash.o(.constdata)
</UL>
<P><STRONG><a name="[d8]"></a>bsp_adapter_sflash_write</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_adapter_sflash.o(i.bsp_adapter_sflash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_adapter_sflash_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_sflash.o(.constdata)
</UL>
<P><STRONG><a name="[2a]"></a>bsp_port_w25q64_cs_high</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_sflash.o(i.bsp_port_w25q64_cs_high))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_sflash.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>bsp_port_w25q64_cs_low</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_adapter_sflash.o(i.bsp_port_w25q64_cs_low))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_sflash.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>bsp_port_w25q64_read_write</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_adapter_sflash.o(i.bsp_port_w25q64_read_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_port_w25q64_read_write &rArr; STD_SPI_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_SPI_ReadWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_adapter_sflash.o(.data)
</UL>
<P><STRONG><a name="[94]"></a>delay_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bsp_driver_delay.o(i.delay_init))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_delay.o(i.bsp_driver_delay_link)
</UL>
<P><STRONG><a name="[96]"></a>delay_ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp_driver_delay.o(i.delay_ms))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_delay.o(i.bsp_driver_delay_link)
</UL>
<P><STRONG><a name="[97]"></a>delay_sec</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp_driver_delay.o(i.delay_sec))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_delay.o(i.bsp_driver_delay_link)
</UL>
<P><STRONG><a name="[95]"></a>delay_us</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp_driver_delay.o(i.delay_us))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_delay.o(i.bsp_driver_delay_link)
</UL>
<P><STRONG><a name="[a7]"></a>led_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bsp_driver_led.o(i.led_init))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_led.o(i.bsp_driver_led_link)
</UL>
<P><STRONG><a name="[a9]"></a>led_off</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_driver_led.o(i.led_off))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_led.o(i.bsp_driver_led_link)
</UL>
<P><STRONG><a name="[a8]"></a>led_on</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_driver_led.o(i.led_on))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_led.o(i.bsp_driver_led_link)
</UL>
<P><STRONG><a name="[a2]"></a>lcd_backlight_off</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_driver_lcd.o(i.lcd_backlight_off))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_lcd.o(i.bsp_driver_lcd_link)
</UL>
<P><STRONG><a name="[a1]"></a>lcd_backlight_on</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_driver_lcd.o(i.lcd_backlight_on))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_lcd.o(i.bsp_driver_lcd_link)
</UL>
<P><STRONG><a name="[a6]"></a>lcd_copy_buffer</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, bsp_driver_lcd.o(i.lcd_copy_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_copy_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_lcd.o(i.bsp_driver_lcd_link)
</UL>
<P><STRONG><a name="[a4]"></a>lcd_fill_rect</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, bsp_driver_lcd.o(i.lcd_fill_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_fill_rect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_lcd.o(i.bsp_driver_lcd_link)
</UL>
<P><STRONG><a name="[a5]"></a>lcd_fill_screen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_driver_lcd.o(i.lcd_fill_screen))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_lcd.o(i.bsp_driver_lcd_link)
</UL>
<P><STRONG><a name="[a0]"></a>lcd_layer_config</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bsp_driver_lcd.o(i.lcd_layer_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_layer_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_lcd.o(i.bsp_driver_lcd_link)
</UL>
<P><STRONG><a name="[a3]"></a>lcd_put_pixel</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, bsp_driver_lcd.o(i.lcd_put_pixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = lcd_put_pixel &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_lcd.o(i.bsp_driver_lcd_link)
</UL>
<P><STRONG><a name="[b4]"></a>st7735_backlight_off</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_driver_st7735.o(i.st7735_backlight_off))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[b3]"></a>st7735_backlight_on</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_driver_st7735.o(i.st7735_backlight_on))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[b5]"></a>st7735_backlight_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_driver_st7735.o(i.st7735_backlight_set))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[b2]"></a>st7735_copy_buffer</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bsp_driver_st7735.o(i.st7735_copy_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = st7735_copy_buffer &rArr; st7735_set_window &rArr; st7735_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_set_window
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[b0]"></a>st7735_fill_rect</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, bsp_driver_st7735.o(i.st7735_fill_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = st7735_fill_rect &rArr; st7735_set_window &rArr; st7735_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_data
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_set_window
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_fill_screen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[b1]"></a>st7735_fill_screen</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_driver_st7735.o(i.st7735_fill_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = st7735_fill_screen &rArr; st7735_fill_rect &rArr; st7735_set_window &rArr; st7735_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_fill_rect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[ac]"></a>st7735_init</STRONG> (Thumb, 496 bytes, Stack size 16 bytes, bsp_driver_st7735.o(i.st7735_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = st7735_init &rArr; st7735_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_data
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_command
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[af]"></a>st7735_put_pixel</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bsp_driver_st7735.o(i.st7735_put_pixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = st7735_put_pixel &rArr; st7735_set_cursor &rArr; st7735_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_data
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_set_cursor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[ad]"></a>st7735_set_cursor</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp_driver_st7735.o(i.st7735_set_cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = st7735_set_cursor &rArr; st7735_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_data
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_put_pixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[ae]"></a>st7735_set_window</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, bsp_driver_st7735.o(i.st7735_set_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = st7735_set_window &rArr; st7735_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_data
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_fill_rect
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_copy_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[ab]"></a>st7735_write_command</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, bsp_driver_st7735.o(i.st7735_write_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = st7735_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_data
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_set_window
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_set_cursor
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[aa]"></a>st7735_write_data</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_driver_st7735.o(i.st7735_write_data))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_command
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_set_window
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_set_cursor
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_put_pixel
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_fill_rect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_st7735.o(i.bsp_driver_st7735_link)
</UL>
<P><STRONG><a name="[9f]"></a>gt911_get_coordinates</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bsp_driver_gt911.o(i.gt911_get_coordinates))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt911_get_coordinates
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_gt911.o(i.bsp_driver_gt911_link)
</UL>
<P><STRONG><a name="[98]"></a>gt911_init</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, bsp_driver_gt911.o(i.gt911_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = gt911_init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt911_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_gt911.o(i.bsp_driver_gt911_link)
</UL>
<P><STRONG><a name="[9e]"></a>gt911_is_pressed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_driver_gt911.o(i.gt911_is_pressed))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_gt911.o(i.bsp_driver_gt911_link)
</UL>
<P><STRONG><a name="[9c]"></a>gt911_read_firmware_version</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_driver_gt911.o(i.gt911_read_firmware_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt911_read_firmware_version
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_gt911.o(i.bsp_driver_gt911_link)
</UL>
<P><STRONG><a name="[9a]"></a>gt911_read_id</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_driver_gt911.o(i.gt911_read_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt911_read_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_gt911.o(i.bsp_driver_gt911_link)
</UL>
<P><STRONG><a name="[9b]"></a>gt911_read_resolution</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, bsp_driver_gt911.o(i.gt911_read_resolution))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gt911_read_resolution
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_gt911.o(i.bsp_driver_gt911_link)
</UL>
<P><STRONG><a name="[99]"></a>gt911_reset</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, bsp_driver_gt911.o(i.gt911_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt911_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt911_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_gt911.o(i.bsp_driver_gt911_link)
</UL>
<P><STRONG><a name="[9d]"></a>gt911_scan</STRONG> (Thumb, 164 bytes, Stack size 80 bytes, bsp_driver_gt911.o(i.gt911_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = gt911_scan &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_gt911.o(i.bsp_driver_gt911_link)
</UL>
<P><STRONG><a name="[bb]"></a>w25q64_erase_block_32k</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bsp_driver_w25q64.o(i.w25q64_erase_block_32k))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w25q64_erase_block_32k &rArr; w25q64_wait_for_write_end
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_write_enable
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_wait_for_write_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P><STRONG><a name="[bc]"></a>w25q64_erase_block_64k</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bsp_driver_w25q64.o(i.w25q64_erase_block_64k))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w25q64_erase_block_64k &rArr; w25q64_wait_for_write_end
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_write_enable
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_wait_for_write_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P><STRONG><a name="[bd]"></a>w25q64_erase_chip</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp_driver_w25q64.o(i.w25q64_erase_chip))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w25q64_erase_chip &rArr; w25q64_wait_for_write_end
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_write_enable
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_wait_for_write_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P><STRONG><a name="[ba]"></a>w25q64_erase_sector</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bsp_driver_w25q64.o(i.w25q64_erase_sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w25q64_erase_sector &rArr; w25q64_wait_for_write_end
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_write_enable
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_wait_for_write_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P><STRONG><a name="[b6]"></a>w25q64_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_driver_w25q64.o(i.w25q64_init))
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P><STRONG><a name="[c0]"></a>w25q64_read</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, bsp_driver_w25q64.o(i.w25q64_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = w25q64_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P><STRONG><a name="[b7]"></a>w25q64_read_id</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bsp_driver_w25q64.o(i.w25q64_read_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = w25q64_read_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P><STRONG><a name="[b9]"></a>w25q64_wait_for_write_end</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bsp_driver_w25q64.o(i.w25q64_wait_for_write_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = w25q64_wait_for_write_end
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_write_page
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_erase_sector
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_erase_chip
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_erase_block_64k
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_erase_block_32k
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P><STRONG><a name="[bf]"></a>w25q64_write</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, bsp_driver_w25q64.o(i.w25q64_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = w25q64_write &rArr;  w25q64_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_write_page
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_write
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P><STRONG><a name="[b8]"></a>w25q64_write_enable</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bsp_driver_w25q64.o(i.w25q64_write_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w25q64_write_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_write_page
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_erase_sector
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_erase_chip
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_erase_block_64k
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_erase_block_32k
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P><STRONG><a name="[be]"></a>w25q64_write_page</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bsp_driver_w25q64.o(i.w25q64_write_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = w25q64_write_page &rArr; w25q64_wait_for_write_end
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_write_enable
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_wait_for_write_end
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q64_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_driver_w25q64.o(i.bsp_driver_w25q64_link)
</UL>
<P><STRONG><a name="[16a]"></a>delay_us</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, msp_emul_i2c.o(i.delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_write_byte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_wait_ack
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_stop
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_start
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_read_byte
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_generate_nack
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msp_emul_i2c_generate_ack
</UL>

<P><STRONG><a name="[10b]"></a>get_periph_clock</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, gpio.o(i.get_periph_clock))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
</UL>

<P><STRONG><a name="[10d]"></a>get_pin_source</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, gpio.o(i.get_pin_source))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STD_GPIO_Init
</UL>

<P><STRONG><a name="[12f]"></a>SetSysClock</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[92]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
